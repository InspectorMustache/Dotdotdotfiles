#!/usr/bin/env fish

~/.local/bin/merge-configs

# move to base tmp_directory
set tmp_dir (mktemp -d)
cd $tmp_dir

function install_from_aur
    if not pacman -Q $argv > /dev/null 2>/dev/null
        aurmake $argv
    end
end

function print_bold
    echo ''
    echo -e "\033[1m"$argv"\033[0m"
end

function install_auracle
    print_bold "Building auracle…"
    cd (mktemp -d -p $tmp_dir)
    git clone 'https://aur.archlinux.org/auracle-git.git'
    cd auracle-git
    makepkg -sri
end

function install_font_awesome
    print_bold "Building FontAwesome 4…"
    auracle download ttf-font-awesome-4
    cd $HOME/Downloads/AUR/ttf-font-awesome-4
    makepkg -ri
    sudo pacman -U otf-*
end

function update_mirrorlist
    print_bold "Retrieving up-to-date pacman mirrorlist…"
    set -l tmp_ml (mktemp -p $tmp_dir -u --suffix .mirrorlist)
    set -l tmp_clean_ml (mktemp -p $tmp_dir -u --suffix .mirrorlist)
    curl "https://www.archlinux.org/mirrorlist/?country=DE&protocol=http&ip_version=4&use_mirror_status=on" -o $tmp_ml
    string replace -ra '^#Server' 'Server' < $tmp_ml > $tmp_clean_ml

    # backup old mirrorlist
    test -e /etc/pacman.d/mirrorlist; and sudo mv /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.bak
    sudo mv $tmp_clean_ml /etc/pacman.d/mirrorlist
end

function download_google_fonts
    # abort if all fonts are already installed
    set -l installed 0
    set -l fc_out (fc-list : family)
    for font in $argv
        string match -qe $font $fc_out; and set installed (math $installed + 1)
    end
    test (count $argv) -eq $installed; and return

    print_bold "Installing Google fonts…"
    cd (mktemp -d -p $tmp_dir)
    set -l dl_string (string join '|' $argv | string replace -a ' ' '%20')
    curl -O -J 'https://fonts.google.com/download?family='$dl_string
    unzip fonts.zip
    cp **.?tf $HOME/.local/share/fonts
end

# download google fonts
download_google_fonts Quicksand Merriweather 'Source Code Pro'

# before anything get up-to-date mirrors
update_mirrorlist

# some AUR stuff, if it's not installed already
print_bold "Building specific AUR packages…"
which auracle > /dev/null 2>/dev/null; or install_auracle
install_from_aur i3lock-color
install_from_aur unclutter-xfixes-git
fc-list : family | string match -qe mononoki; or aurmake ttf-mononoki
fc-list : family | string match -qe FontAwesome; or install_font_awesome

# powerlinesymbols
fc-list : family | string match -qe powerline; or begin
    cd $tmp_dir
    print_bold "Installing Powerline Symbols…"
    curl -O -J 'https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf'
    mv PowerlineSymbols.otf $HOME/.local/share/fonts
end

print_bold "Download essential packages from the official repositiories…"
# some basic packages and globally acessible fonts
sudo pacman -S --needed \
    pulseaudio \
    alsa-utils \
    pulseaudio-alsa \
    openssh \
    numlockx \
    firejail \
    fzf \
    dunst \
    feh \
    i3-gaps \
    compton \
    termite \
    pass \
    unzip \
    i3blocks \
    ttf-liberation \
    noto-fonts-cjk \
    ttf-freefont \
    adobe-source-code-pro-fonts \
    arc-gtk-theme \
    fcitx-im \
    fcitx-sunpinyin \
    xss-lock \
    rofi \
    w3m \
    syncthing

# setup firejail
print_bold "Creating firejail config…"
sudo firecfg

# once more why not
~/.local/bin/merge-configs

# clean up
print_bold "Deleting temporary directories…"
rm -rf $tmp_dir

print_bold "Updating font cache…"
fc-cache -fv

print_bold "Enabling user systemd services…"
systemctl --user enable dunst

print_bold "Done!"
print_bold "\nLeft to do:"
print_bold "\tSet-up password store"
print_bold "\tSet-up GPG"
print_bold "\tSet-up SSH"
print_bold "\tSet-up Syncthing"
